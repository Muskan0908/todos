{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","todos","input","handleChange","e","setState","target","value","handleSubmit","todo","id","Math","random","task","push","handleDelete","updated","filter","item","type","placeholder","onChange","this","onClick","map","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNA6CeA,E,4MA1CXC,MAAM,CACJC,MAAM,GACNC,MAAM,I,EAERC,aAAa,SAACC,GACZ,EAAKC,SAAS,CAACH,MAAME,EAAEE,OAAOC,S,EAEhCC,aAAa,WACX,GAAsB,KAAnB,EAAKR,MAAME,MAAW,CACvB,IAAMD,EAAM,YAAI,EAAKD,MAAMC,OACrBQ,EAAK,CACTC,GAAGC,KAAKC,SACRC,KAAK,EAAKb,MAAME,OAElBD,EAAMa,KAAKL,GACX,EAAKJ,SAAS,CACZJ,MAAMA,EACNC,MAAM,O,EAIZa,aAAa,SAACL,GACZ,IACMM,EADM,YAAI,EAAKhB,MAAMC,OACPgB,QAAO,SAAAC,GAAI,OAAEA,EAAKR,KAAKA,KAC3C,EAAKL,SAAS,CAACJ,MAAMe,K,4CAEzB,WAAU,IAAD,OACP,OACE,gCACE,2CACA,uBAAOG,KAAK,OAAOC,YAAY,YAAYC,SAAUC,KAAKnB,aAAcI,MAAOe,KAAKtB,MAAME,QAC1F,wBAAQqB,QAASD,KAAKd,aAAtB,iBACA,6BACCc,KAAKtB,MAAMC,MAAMuB,KAAI,SAAAN,GACpB,OAAO,+BAAmBA,EAAKL,KAAK,wBAAQU,QAAS,WAAK,EAAKR,aAAaG,EAAKR,KAA7C,oBAApBQ,EAAKR,gB,GAnCbe,aCUHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0cebe86d.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass App extends Component {\n    state={\n      todos:[],\n      input:\"\"\n    }\n    handleChange=(e)=>{\n      this.setState({input:e.target.value})\n    }\n    handleSubmit=()=>{\n      if(this.state.input!==''){\n        const todos=[...this.state.todos];\n        const todo={\n          id:Math.random(),\n          task:this.state.input\n        };\n        todos.push(todo);\n        this.setState({\n          todos:todos,\n          input:\"\"\n        })\n      }\n    }\n    handleDelete=(id)=>{\n      const todos=[...this.state.todos];\n      const updated=todos.filter(item=>item.id!==id);\n      this.setState({todos:updated});\n    }\n  render() {\n    return (\n      <div>\n        <h1>To-Do App</h1>\n        <input type=\"text\" placeholder=\"Type here\" onChange={this.handleChange} value={this.state.input}/>\n        <button onClick={this.handleSubmit}>Add</button>\n        <ul>\n        {this.state.todos.map(item=>{\n          return <li key={item.id}>{item.task}<button onClick={()=>{this.handleDelete(item.id)}}>&#215;</button></li>\n        })}\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}